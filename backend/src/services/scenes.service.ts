import { Injectable } from '@nestjs/common';

/**
 * ScenesService manages and validates the 3D scene code generated by the LLM.
 * It lets you track, validate, and debug all generated scenes.
 * You can extend it to store scenes in a database, allow users to browse previous scenes, or analyze LLM output quality.
 * It helps confirm if scenes are being created and used as expected.
 */
@Injectable()
export class ScenesService {
  // Store scenes in memory for now
  private scenes: { [id: string]: { code: string; timestamp: number } } = {};

  saveScene(id: string, code: string) {
    this.scenes[id] = { code, timestamp: Date.now() };
    console.log(`[ScenesService] Scene saved: ${id}`);
  }

  getScene(id: string): { code: string; timestamp: number } | undefined {
    return this.scenes[id];
  }

  getAllScenes(): { [id: string]: { code: string; timestamp: number } } {
    return this.scenes;
  }

  validateSceneCode(code: string): boolean {
    // Basic validation: must contain scene.add and renderer.render or engine.runRenderLoop
    const valid =
      /scene\.add\s*\(/.test(code) &&
      (/renderer\.render\s*\(/.test(code) || /engine\.runRenderLoop\s*\(/.test(code));
    if (!valid) {
      console.warn('[ScenesService] Scene code failed validation.');
    }
    return valid;
  }

  debugScene(id: string): void {
    const scene = this.getScene(id);
    if (scene) {
      console.log(`[ScenesService] Debugging scene ${id}:`);
      console.log(scene.code);
    } else {
      console.warn(`[ScenesService] Scene ${id} not found.`);
    }
  }
}
